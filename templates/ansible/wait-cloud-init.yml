---
# Ansible Playbook: Wait for cloud-init completion
# This playbook connects to VMs and waits for cloud-init to finish its setup process
#
# ðŸ”— RELATIONSHIP WITH OPENTOFU:
# 1. OpenTofu (templates/tofu/lxd/main.tf) provisions the VM/container
# 2. OpenTofu configures cloud-init (templates/tofu/lxd/cloud-init.yml) during provisioning
# 3. Cloud-init runs inside the VM to set up users, SSH keys, and basic configuration
# 4. This Ansible playbook waits for cloud-init to complete before proceeding
# 5. Once cloud-init is done, Ansible can safely manage the VM

# Define which hosts this playbook will run on
- name: Wait for cloud-init completion
  hosts: all # Run on all hosts defined in inventory.yml
  gather_facts: false # Don't collect system info initially (speeds up start)
  become: true # Use sudo/root privileges for system-level operations

  # List of tasks to execute in order
  tasks:
    # Task 1: Wait for cloud-init to create its completion marker file
    # ðŸ”— CLOUD-INIT RELATIONSHIP: This file is created when cloud-init finishes
    # all tasks defined in templates/tofu/lxd/cloud-init.yml
    - name: Wait for cloud-init to finish
      ansible.builtin.wait_for:
        path: /var/lib/cloud/instance/boot-finished # File created when cloud-init completes
        timeout: 300 # Wait up to 5 minutes (300 seconds)
      register: cloud_init_result # Store the result for later use

    # Task 2: Display success message if cloud-init completed
    - name: Display cloud-init completion status
      ansible.builtin.debug:
        msg: "Cloud-init has completed successfully!"
      when: cloud_init_result is succeeded # Only run if previous task succeeded

    # Task 3: Check cloud-init status using the built-in command
    - name: Check cloud-init status
      ansible.builtin.command: cloud-init status --wait
      register: cloud_init_status # Store command output
      changed_when: false # This command doesn't change system state

    # Task 4: Show the cloud-init status output
    - name: Display cloud-init status
      ansible.builtin.debug:
        var: cloud_init_status.stdout # Show the standard output from the command

    # Task 5: Collect basic information about the system
    - name: Gather basic system information
      ansible.builtin.setup:
        gather_subset:
          - min # Basic facts like hostname, OS
          - network # Network configuration and IP addresses

    # Task 6: Display useful system information
    - name: Display system information
      ansible.builtin.debug:
        msg: |
          Hostname: {{ ansible_hostname }}
          Distribution: {{ ansible_distribution }} {{ ansible_distribution_version }}
          Architecture: {{ ansible_architecture }}
          IP Address: {{ ansible_default_ipv4.address }}
          Python Version: {{ ansible_python_version }}
